!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Data	new_data.py	/^class Data:$/;"	c
DataDir	new_data.py	/^class DataDir(Data):$/;"	c
MemN2N	MemN2N/memn2n.py	/^class MemN2N(object):$/;"	c
MongoConn	new_data.py	/^class MongoConn(Data):$/;"	c
ProcessedData	new_data.py	/^class ProcessedData:$/;"	c
__init__	MemN2N/memn2n.py	/^    def __init__(self, batch_size, vocab_size, sentence_size, memory_size, embedding_size,$/;"	m	class:MemN2N
__init__	new_data.py	/^    def __init__(self, ip_addr, port = 27017):$/;"	m	class:MongoConn
__init__	new_data.py	/^    def __init__(self, path):$/;"	m	class:DataDir
__init__	new_data.py	/^    def __init__(self, source):$/;"	m	class:ProcessedData
__init__	new_data.py	/^    def __init__(self, source, raw = True):$/;"	m	class:Data
_build_inputs	MemN2N/memn2n.py	/^    def _build_inputs(self):$/;"	m	class:MemN2N
_build_params	MemN2N/memn2n.py	/^    def _build_params(self):$/;"	m	class:MemN2N
_convert_data	new_data.py	/^    def _convert_data(self, path, pickled_files):$/;"	m	class:DataDir
_convert_datadir	new_data.py	/^    def _convert_datadir(self, data_source, data_split = (0.85, 0.05, 0.1)):$/;"	m	class:Data
_convert_document	new_data.py	/^    def _convert_document(self, path, document):$/;"	m	class:MongoConn
_convert_mongo	new_data.py	/^    def _convert_mongo(self, data_source, data_split = (0.85, 0.05, 0.1), collections = None):$/;"	m	class:Data
_feedforward	MemN2N/memn2n.py	/^    def _feedforward(self, sentence_context, queries):$/;"	m	class:MemN2N
_is_ip_address	new_data.py	/^    def _is_ip_address(s):$/;"	m	class:MongoConn
_read_data	new_data.py	/^    def _read_data(self):$/;"	m	class:Data
_read_data_helper	new_data.py	/^    def _read_data_helper(self, source, count, word2idx):$/;"	m	class:ProcessedData
_train_batch	MemN2N/memn2n.py	/^    def _train_batch(self, sentence_context, queries, answers, learning_rate):$/;"	m	class:MemN2N
_train_batches_SGD	MemN2N/memn2n.py	/^    def _train_batches_SGD(self, data, batch_size, learning_rate):$/;"	m	class:MemN2N
accuracy	MemN2N/memn2n.py	/^    def accuracy(self, data):$/;"	m	class:MemN2N
add_gradient_noise	MemN2N/memn2n.py	/^def add_gradient_noise(t, stddev = 1e-3, name = None):$/;"	f
convert	new_data.py	/^    def convert(self, data_storage, data_split = (0.85, 0.05, 0.1)):$/;"	m	class:DataDir
convert	new_data.py	/^    def convert(self, data_storage, data_split = (0.85, 0.05, 0.1), collections = None):$/;"	m	class:MongoConn
listdir_recursive	new_data.py	/^    listdir_recursive = lambda directory: [os.path.join(dp, f) for dp, dn, fn in os.walk(os.path.expanduser(directory)) for f in fn]$/;"	v	class:MongoConn
position_encoding	MemN2N/memn2n.py	/^def position_encoding(sentence_size, embedding_size):$/;"	f
predict	MemN2N/memn2n.py	/^    def predict(self, sentence_context, queries):$/;"	m	class:MemN2N
read_data	new_data.py	/^    def read_data(self):$/;"	m	class:ProcessedData
test	MemN2N/memn2n.py	/^    def test(self, data):$/;"	m	class:MemN2N
train	MemN2N/memn2n.py	/^    def train(self, train_data, valid_data, nepochs, verbose = True):$/;"	m	class:MemN2N
zero_nil_slot	MemN2N/memn2n.py	/^def zero_nil_slot(t, name = None):$/;"	f
